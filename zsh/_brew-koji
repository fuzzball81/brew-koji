#compdef brew koji=brew
#
#
# ZSH Completion Function for Fedora/RedHat Koji/Brew Build System
#
#

_brew-koji() {
   typeset -A opt_args
   local curcontext="$curcontext" context state line

   local ret=1

   _arguments -C \
      '1:cmd:->cmds' \
      '*::arg:->args' \
      && ret=0

   case "$state" in
    (cmds)
      local commands; commands=(
         'add-pkg:Add a package to the listing for tag'
         'build:Build a package from source'
         'buildinfo:Print basic information about a build'
         'cancel:Cancel tasks and/or builds'
         'chain-build:Build one or more packages from source'
         'download-build:Download a built package'
         'download-logs:Download a logs for package'
         'help:List available commands'
         'import-comps:Import group/package information from a comps file'
         'latest-build:Print the latest packages for each tag'
         'list-api:Print the list of XML-RPC APIs'
         'list-buildroot:List the rpms used in or built in a buildroot'
         'list-external-repos:List external repos'
         'list-groups:Print the group listings'
         'list-history:Display historical data'
         'list-hosts:Print the host listing'
         'list-pkgs:Print the package listing for tag or for owner'
         'list-tag-history:Print a history of tag operations'
         'list-tag-inheritance:Print the inheritance information for a tag'
         'list-tagged:List the builds or rpms in a tag'
         'list-tags:Print the list of tags'
         'list-targets:List the build targets'
         'list-tasks:Print the list of tasks'
         'list-untagged:List untagged builds'
         'maven-build:Build a Maven package from source'
         'maven-chain:Run a set of Maven builds in dependency order'
         'mock-config:Create a mock config'
         'move-pkg:Move one or more packages between tags'
         'resubmit:Retry a canceled or failed task, using the same parameter as the original task.'
         'rpminfo:Print basic information about an RPM'
         'search:Search koji'
         'show-groups:Show groups data for a tag'
         'tag-pkg:Apply a tag to one or more packages'
         'taginfo:Print basic information about a tag'
         'taskinfo:Show information about a task'
         'untag-pkg:Remove a tag from one or more packages'
         'wait-repo:Wait for a repo to be regenerated'
         'watch-logs:Watch logs in realtime'
         'watch-task:Track progress of particular tasks'
         'win-build:Build a Windows package from source'
      )
      _describe -t commands 'command' commands && ret=0
      ;;
    (args)
      case $words[1] in
       (add-pkg)
         _arguments -A "-*" \
            '(--owner --force --extra-arches)'{-h,--help}'[show this help message and exit]' \
            '--owner=-[Specify owner]' \
            '--tag=-[Specify tag]' \
            '--extra-arches=-[Specify extra arches]' \
            '--force[Override blocks if neccessary]' \
            '*:tag package [package...]:' \
            && ret=0
            ;;
       (build)
         _arguments -A "-*" \
            '(--skip-tag --scratch --wait --nowait --quiet --arch\-override --repo\-id --noprogress --background)'{-h,--help}'[show this help message and exit]' \
            '--skip-tag[Do not attempt to tag package]' \
            '--scratch[Perform a scratch build]' \
            '--wait[Wait on the build, even if running in the background]' \
            '--nowait[Dont wait on build]' \
            '--quiet[Do not print the task information]' \
            '--arch-override=-[Override build arches]' \
            '--repo-id=-[Use a specific repo]' \
            '--noprogress[Do not display progress of the upload]' \
            '--background[Run the build at a lower priority]' \
            '*:target URL:' \
            && ret=0
         ;;
       (buildinfo)
         _arguments -A "-*" \
            '(--changelog)--help[show this help message and exit]' \
            '--changelog[Show the changelog for the build]' \
            '*:<n-v-r> [<n-v-r>...:' \
            && ret=0
         ;;
       (cancel)
         _arguments -A "-*" \
            '(--justone --full --force)--help[show this help message and exit]' \
            '--justone[Do not cancel subtasks]' \
            '--full[Full cancellation (admin only)]' \
            '--force[Allow subtasks with --full]' \
            '*:<task-id|build> [<task-id|build> ...]' \
            && ret=0
         ;;
       (chain-build)
         _arguments -A "-*" \
            '(--nowait --noprogress --background)--help[show this help message and exit]' \
            '--nowait[Dont wait on build]' \
            '--noprogress[Do not display progress of the upload]' \
            '--background[Run the build at a lower priority]' \
            '*:target URL [URL2 [:] URL3 [:] URL4 ...]xs' \
            && ret=0
         ;;
       (download-logs)
         _arguments -A "-*" \
            '(--recurse --nvr --match --continue --dir)--help[show this help message and exit]' \
            '--recurse[Process children of this task as well]' \
            '--nvr=-[Get logs from n-v-r]' \
            '*--match=-[Get only log matching PATTERN. May be used multiple times]' \
            '--continue[Continue previous download]' \
            '--dir=-[Download to this directory]' \
            '*:<n-v-r | build_id | package>' \
            && ret=0
         ;;
       (download-build)
         _arguments -A "-*" \
            '(--arch --type --latestfrom --debuginfo --key --topurl --quiet)--help[show this help message and exit]' \
            '--arch=-[Only download packages for this arch (may be used]' \
            '--type=-[Download archives of the given type, rather than rpms]' \
            '--latestfrom=-[Download the latest build from this tag]' \
            '--debuginfo[Also download -debuginfo rpms]' \
            '--key=-[Download rpms signed with the given key]' \
            '--topurl=-[URL under which Koji files are accessible]' \
            '--quiet[Do not display progress meter]' \
            '*:<n-v-r | build_id | package>' \
            && ret=0
         ;;
       (help)
         _arguments -A "-*" \
            '--help[show this help message and exit]' \
            '--admin[show admin commands]' \
            && ret=0
         ;;
       (import-comps)
         _arguments -A "-*" \
            '(--force)--help[show this help message and exit]' \
            '--force[force import]' \
            '*:file tag' \
            && ret=0
         ;;
       (latest-build)
         _arguments -A "-*" \
            '(--arch --all --quiet --paths --type)--help[show this help message and exit]' \
            '--arch=-[List all of the latest packages for this arch]' \
            '--all=-[List all of the latest packages for this tag]' \
            '--quiet[Do not print the header information]' \
            '--paths[Show the file paths]' \
            '--type=-[Show builds of the given type only. Currently supported types: maven]' \
            '*:tag package [package...]:' \
            && ret=0
         ;;
       (latest-pkg)
         _arguments -A "-*" \
            '(--arch --all --quiet --paths --type)--help[show this help message and exit]' \
            '--arch=-[List all of the latest packages for this arch]' \
            '--all=-[List all of the latest packages for this tag]' \
            '--quiet[Do not print the header information]' \
            '--paths[Show the file paths]' \
            '--type=-[Show builds of the given type only. Currently supported types: maven]' \
            '*:tag package [package...]:' \
            && ret=0
         ;;
       # list-api - no arguments.
       (list-buildroot)
         _arguments -A "-*" \
            '(--paths --built)--help[show this help message and exit]' \
            '--paths[Show the file paths]' \
            '--built=-[Show the built rpms]' \
            '*:buildroot-id:' \
            && ret=0
         ;;
       (list-external-repos)
         _arguments -A "-*" \
            '(--url --event --ts --repo --name --id --tag --used --inherit)--help[show this help message and exit]' \
            '(--name --id --tag)--url=-[Select by url]' \
            '(--url --id --tag)--name=-[Select by name]' \
            '(--url --name --tag--id=-[Select by id]' \
            '(--url --name --id)--tag=-[Select by tag]' \
            '--used[List which tags use the repo(s)]' \
            '--inherit[Follow tag inheritance when selecting by tag]' \
            '(--ts --repo)--event=-[query at event]:Specify event' \
            '(--event --repo)--ts=-[query at timestamp]:Specify timestamp' \
            '(--ts --event)--repo=-[query at event corresponding to (nonexternal) repo]:Specify repository' \
            '--quiet[Do not display the column headers]' \
            && ret=0
         ;;
       # list-groups - no arguments
       (list-history)
         _arguments -A "-*" \
            '(--debug --build --package --tag --editor --user --permision --external --build\-target --group --before --after --before\-event --after\-event --context --show --verbose --all)'{-h,--help}'[show this help message and exit]' \
            '--debug' \
            '--build=-[Only show data for a specific build]' \
            '--package=-[Only show data for a specific package]' \
            '--tag=-[Only show data for a specific tag]' \
            {--editor=-,--by=-}'[Only show entries modified by user]' \
            '--user=-[Only show entries affecting a user]' \
            '--permission=-[Only show entries relating to a given permission]' \
            {--erepo,--external-repo=-}'[External repo]' \
            {--build-target=-,--target=-}'[Only show entries relating to a given build target]' \
            '--group=-[Only show entries relating to a given group]' \
            '--before=-[Only show entries before timestamp]' \
            '--after=-[Only show entries after timestamp]' \
            '--before-event=-[Only show entries before event]' \
            '--after-event=[Only show entries after event]' \
            '--context[Show related entries]' \
            {-s ,--show=-}'[Show data from selected tables]' \
            {-v,--verbose}'[Show more detail]' \
            {-e,--events}'[Show event ids]' \
            '--all[Allows listing the entire global history]' \
            && ret=0
            ;;
       (list-hosts)
         _arguments -A "-*" \
            '(--arch --channel--ready --not\-ready --enabled --not\-enabled --quiet)'{-h,--help}'[show this help message and exit]' \
            '--arch=-[Specify an architecture]' \
            '--channel=-[Specify a channel]' \
            '--ready[Limit to ready hosts]' \
            '--not-ready[Limit to not ready hosts]' \
            '--enabled[Limit to enabled hosts]' \
            '--not-enabled[Limit to not enabled hosts]' \
            '--quiet[Do not print header information]' \
            && ret=0
            ;;
       (list-pkgs)
         _arguments -A "-*" \
            '(--owner --tag --package --quiet --noinherit --show\-blocked --show\-dups --event --ts --repo)'{-h,--help}'[show this help message and exit]' \
            '--owner=-[Specify owner]' \
            '--tag=-[Specify tag]' \
            '--package=-[Specify package]' \
            '--quiet[Do not print header information]' \
            '--noinherit[Dont follow inheritance]' \
            '--show-blocked[Show blocked packages]' \
            '--show-dups[Show superseded owners]' \
            '--event=-[query at event]' \
            '--ts=-[query at timestamp]' \
            '--repo=-[query at event for a repo]' \
            && ret=0
            ;;
       (list-tag-history)
         _arguments -A "-*" \
            '(--debug --build --package --tag --all)'{-h,--help}'[show this help message and exit]' \
            '--debug' \
            '--build=-[Only show data for a specific build]' \
            '--package=-[Only show data for a specific package]' \
            '--tag=-[Only show data for a specific tag]' \
            '--all[Allows listing the entire global history]' \
            && ret=0
            ;;

       (list-tag-inheritance)
         _arguments -A "-*" \
            '(--jump --event --ts --repo --reverse)--help[show this help message and exit]' \
            '--reverse[Process tags children instead of its parents]' \
            '(--jump --event --ts --repo)--stop=-[Stop processing inheritance at this tag]:Specify tag' \
            '(--stop --event --ts --repo)--jump=-[Jump from one tag to another when processing inheritance]:Specify tag' \
            '(--jump --stop --ts --repo)--event=-[query at event]:Specify event' \
            '(--jump --stop --event --repo)--ts=-[query at timestamp]:Specify timestamp' \
            '(--jump --stop --ts --event)--repo=-[query at event for a repo]:Specify repository' \
            '*:<tag>:' \
            && ret=0
         ;;
       (list-tagged)
         _arguments -A "-*" \
            '(--arch --rpms --inherit --latest --latest --quiet --path --sigs --type --event --ts --repo)--help[show this help message and exit]' \
            '--arch=-[List rpms for this arch]' \
            '--rpms[Show rpms instead of builds]' \
            '--inherit[Follow inheritance]' \
            '--latest[Only show the latest builds/rpms]' \
            '--quiet[Do not print the header information]' \
            '--paths[Show the file paths]' \
            '--sigs[Show signatures]' \
            '--type=-[Show builds of the given type only. Currently supported types: maven]' \
            '--event=-[query at event]' \
            '--ts=-[query at timestamp]' \
            '--repo=-[query at event for a repo]' \
             '*:tag package:' \
           && ret=0
         ;;
       (list-tags)
         _arguments -A "-*" \
            '(--show\-id --verbose --unlocked --build --package)'{-h,--help}'[show this help message and exit]' \
            '--show-id[Show tag ids]' \
            '--verbose[Show more information]' \
            '--unlocked[Only show unlocked tags]' \
            '--build=-[Show tags associated with a build]' \
            '--package=-[Show tags associated with a package]' \
            && ret=0
         ;;
       (list-targets)
         _arguments -A "-*" \
            '(--name --quiet)'{-h,--help}'[show this help message and exit]' \
            '--name=-[Specify the build target name]' \
            '--quiet[Do not print the header information]' \
            && ret=0
         ;;
       (list-tasks)
         _arguments -A "-*" \
            '(--mine --quiet)'{-h,--help}'[show this help message and exit]' \
            '--mine[Just print your tasks]' \
            '--quiet[Do not display the column headers]' \
         && ret=0
         ;;
       (list-untagged)
         _arguments -A "-*" \
            '(--paths --show\-references)'{-h,--help}'[show this help message and exit]' \
            '--paths[Show the file paths]' \
            '--show-references[Show build references]' \
            && ret=0
         ;;
       (maven-build)
         _arguments -s -A "-*" \
            (--patches --profile --jvm-option --maven-option --debug --specfile --skip\-tag --scratch --nowait --noprogress --background){--help,-h}'[show this help message and exit]' \
            '--patches=-[SCM URL of a directory containing patches to apply to the sources before building]:URL' \
            {-P,--profile=-}'[Enable a profile for the Maven build]:Profile name' \
            {-D,--property=-}'[Pass a system property to the Maven build]:<name>=<value>' \
            {-J,--jvm-option=-}'[Pass a command-line option to the JVM]:JVM Option' \
            {-M,--maven-option=-}'[Pass a command-line option to Maven]:Maven Option' \
            '--debug[Run Maven build in debug mode]' \
            '--specfile=-[SCM URL of a spec file fragment to use to generate]' \
            '--skip-tag[Do not attempt to tag package]' \
            '--scratch[Perform a scratch build]' \
            '--nowait[Dont wait on build]' \
            '--noprogress[Do not display progress of the upload]' \
            '--background[Run the build at a lower priority]' \
            '*:target URL:' \
            && ret=0
         ;;
       (maven-chain)
         _arguments -s -A "-*" \
            (--skip-tag --scratch --debug --force --nowait --background){--help,-h}'[show this help message and exit]' \
            '--skip-tag[Do not attempt to tag builds]' \
            '--scratch[Perform a scratch build]' \
            '--debug[Run Maven build in debug mode]' \
            '--force[Force rebuilds of all packages]' \
            '--nowait[Dont wait on build]' \
            '--background[Run the build at a lower priority]' \
            '*:target URL:' \
            && ret=0
         ;;
       (mock-config)
         _arguments -A "-*" \
            '(--arch --tag --task --buildroot --mockdir --topdir --topurl --distribution -o)--help[show this help message and exit]' \
            '--arch=-[Specify the arch]' \
            '--tag=-[Create a mock config for a tag]' \
            '--task=-[Duplicate the mock config of a previous task]' \
            '--buildroot=-[Duplicate the mock config for the specified buildroot]' \
            '--mockdir=-[Specify mockdir]' \
            '--topdir=-[Specify topdir]' \
            '--topurl=-[url under which Koji files are accessible]' \
            '--distribution=-[Change the distribution macro]' \
            '-o+[Output to a file]:Filename' \
            '*:name:' \
            && ret=0
         ;;
       (moshimoshi)
         _arguments -A "-*" \
            '(--help[show this help message and exit]' \
            && ret=0
       (move-pkg)
         _arguments -A "-*" \
            '(--force --nowait --quiet)--help[show this help message and exit]' \
            '--force[force operation]' \
            '--nowait[do not wait on tasks]' \
            '--all[move all instances of a package, <pkg>s are package names]' \
            '*:<tag1> <tag2> <pkg> [<pkg>...]:' \
            && ret=0
         ;;
       (resubmit)
         _arguments -A "-*" \
            '(--nowait --nowatch --quiet)--help[show this help message and exit]' \
            '--nowait[Dont wait on task]' \
            '--nowatch[An alias for --nowait]' \
            '--quiet[Do not print the task information]' \
            '*:<taskID>:' \
            && ret=0
         ;;
       (rpminfo)
         _arguments -A "-*" \
            '*:<n-v-r.a> [<n-v-r.a>...]:' \
            && ret=0
         ;;
       (search)
         _arguments -A "-*" \
            '(--regex --exact)--help[show this help message and exit]' \
            '--regex[treat pattern as regex]' \
            '--exact[exact matches only]' \
            '*:search_type pattern (where search_type is one of package, build, tag, target, user, host, rpm):' \
            && ret=0
         ;;
       (show-groups)
         _arguments -A "-*" \
            '(--comps --expand --spec)--help[show this help message and exit]' \
            '--comps[Print in comps format]' \
            '--expand[Expand groups in comps format]' \
            '--spec[Print build spec]' \
            '*:<tag>:' \
            && ret=0
         ;;
       (tag-pkg)
         _arguments -A "-*" \
            '(--force --nowait)--help[show this help message and exit]' \
            '--force[force operation]' \
            '--nowait[Do not wait on task]' \
            '*:<tag> <pkg> [<pkg>...]:' \
            && ret=0
         ;;
       (tag-build)
         _arguments -A "-*" \
            '(--force --nowait)--help[show this help message and exit]' \
            '--force[force operation]' \
            '--nowait[Do not wait on task]' \
            '*:<tag> <pkg> [<pkg>...]:' \
            && ret=0
         ;;
       (taginfo)
         _arguments -A "-*" \
            '*:<tag> [<tag>...]:' \
            && ret=0
         ;;
       (taskinfo)
         _arguments -A "-*" \
            '(--recurse --verbose)--help[show this help message and exit]' \
            '--recurse[Show children of this task as well]' \
            '--verbose[Be verbose]' \
            '*:taskID [taskID...]:' \
            && ret=0
         ;;
       (untag-build)
         _arguments -A "-*" \
            '(--all --non\-latest --test --verbose --force)--help[show this help message and exit]' \
            '--all[untag all versions of the package in this tag]' \
            '--non-latest[untag all versions of the package in this tag except the latest]' \
            '--test[test mode]' \
            '--verbose[print details]' \
            '--force[force operation]' \
            '*:<tag> <pkg> [<pkg>...]:' \
            && ret=0
         ;;
       (untag-pkg)
         _arguments -A "-*" \
            '(--all --non\-latest --test --verbose --force)--help[show this help message and exit]' \
            '--all[untag all versions of the package in this tag]' \
            '--non-latest[untag all versions of the package in this tag except the latest]' \
            '--test[test mode]' \
            '--verbose[print details]' \
            '--force[force operation]' \
            '*:<tag> <pkg> [<pkg>...]:' \
            && ret=0
         ;;
       (wait-repo)
         _arguments -A "-*" \
            '(--build --target --timeout --quiet)--help[show this help message and exit]' \
            '--build=-[Check that the given build (or a later build of the same package) is in the newly-generated repo (may be used multiple times)]' \
            '--target[Interpret the argument as a build target name]' \
            '--timeout=-[Amount of time to wait (in minutes) before giving up (default: 120)]' \
            '--quiet[Suppress output, success or failure will be indicated by the return value only]' \
            '*:<tag>:' \
            && ret=0
         ;;
       (watch-logs)
         _arguments -A "-*" \
            '(--log)--help[show this help message and exit]' \
            '--log=-[Watch only a specific log]' \
            '*:<task id> [<task id>...]:' \
            && ret=0
         ;;
       (watch-task)
         _arguments -A "-*" \
            '(--quiet)--help[show this help message and exit]' \
            '--quiet[Do not print the task information]' \
            '*:<task id> [<task id>...]:' \
            && ret=0
         ;;
       (win-build)
         _arguments -A "-*" \
            '(--winspec --patches --cpus --mem --specfile --scratch --repo-id --skip-tag --background --wait --nowait --quiet)--help[show this help message and exit]' \
            '--winspec=-[SCM URL to retrieve the build descriptor from. If not]' \
            '--patches=-[SCM URL of a directory containing patches to apply to the]' \
            '--cpus=-[Number of cpus to allocate to the build VM (requires]' \
            '--mem=-[Amount of memory (in megabytes) to allocate to the build]' \
            '--specfile=-[SCM URL of a spec file fragment to use to generate]' \
            '--scratch[Perform a scratch build]' \
            '--repo-id=-[Use a specific repo]' \
            '--skip-tag[Do not attempt to tag package]' \
            '--background[Run the build at a lower priority]' \
            '--wait[Wait on the build, even if running in the background]' \
            '--nowait[Dont wait on build]' \
            '--quiet[Do not print the task information]' \
            '*:target URL VM:' \
            && ret=0
         ;;
       (wrapper-rpm)
         _arguments -A "-*" \
            '(--scratch --nowait --background)--help[show this help message and exit]' \
            '--scratch[Perform a scratch build]' \
            '--nowait[Dont wait on build]' \
            '--background[Run the build at a lower priority]' \
            '*:<signature-key> n-v-r [n-v-r...]:' \
            && ret=0
         ;;
       (write-signed-rpm)
         _arguments -A "-*" \
            '(--all --buildid)--help[show this help message and exit]' \
            '--all[Write out all RPMs signed with this key]' \
            '--buildid=-[Specify a build id rather than an n-v-r]' \
            '*:<signature-key> n-v-r [n-v-r...]:' \
            && ret=0
         ;;
      esac
      ;;
   esac

  return ret
}

 _brew-koji "$@"

 # Local Variables:
 # mode: sh
 # End:
